@model PagedList.IPagedList<YHRSys.Models.Order>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Orders List";
}

<h2>Variety Orders List</h2>

<p>
    @using (Html.BeginForm("Index", "Orders", FormMethod.Post, new { @class = "form-inline", role = "form" }))
    {
        <div class="form-group">
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control input-mini", placeholder = "Search phrase goes here ..." })
        </div>;
        <div class="form-group">
            @Html.TextBox("SearchStartOrderDate", ViewBag.StartOrderDateFilter as string, new { @class = "form-control datecontrol input-mini", placeholder = "Order date start range .." })
        </div>;
        <div class="form-group">
            @Html.TextBox("SearchEndOrderDate", ViewBag.EndOrderDateFilter as string, new { @class = "form-control datecontrol input-mini", placeholder = "Order date end range ..." })
        </div>;
        <input class="btn btn-primary" type="submit" id="searchButton" name="btnSubmit" value="Search!" />
        <button class="btn btn-success" type="button" id="resetButton" onclick="clearForm();">Clear!</button>
    }
</p>

<div class="table-responsive">
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("OrderDate", "Index", new { sortOrder = ViewBag.OrderDateSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
            </th>
            <th>
                @Html.ActionLink("FullName", "Index", new { sortOrder = ViewBag.LastNameSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
            </th>
            <th>
                Address
            </th>
            <th>
                @Html.ActionLink("City", "Index", new { sortOrder = ViewBag.CitySortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
            </th>
            <th>
                @Html.ActionLink("State", "Index", new { sortOrder = ViewBag.StateSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
            </th>
            <th>
                @Html.ActionLink("Country", "Index", new { sortOrder = ViewBag.CountrySortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
            </th>
            <th>
                Email
            </th>
            <th>
                @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatusSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName), @Html.DisplayFor(modelItem => item.FirstName)  
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.status)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.OrderId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.OrderId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.OrderId })
                </td>
            </tr>
        }

    </table>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
                        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter }))
</div>