@model YHRSys.ViewModels.ShoppingCartViewModel

@{
    ViewBag.Title = "Shopping Cart";

}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(function () {
        // Document.ready -> link up remove event handler
        $(".RemoveLink").click(function () {
            // Get the id from the link
            var recordToDelete = $(this).attr("data-id");
            if (recordToDelete != '') {
                clearUpdateMessage();
                // Perform the ajax post
                $.post("/ShoppingCart/RemoveFromCart", { "id": recordToDelete },
                    function (data) {
                        // Successful requests get here
                        // Update the page elements
                        //if (data.ItemCount == 0) {
                        $('#row-' + data.DeleteId).fadeOut('slow');
                        //} else {
                        //    $('#item-count-' + data.DeleteId).text(data.ItemCount);
                        //}
                        $('#cart-total').text(data.QtytTotal);//$('#cart-total').text(data.CartTotal);
                        $('#update-message').text(htmlDecode(data.Message));
                        $('#cart-status').text('Cart (' + data.CartCount + ')');
                    });
            }
        });

        $(".RefreshQuantity").click(function () {
            // Get the id from the link
            var recordToUpdate = $(this).attr("data-id");
            //Set quantity number to 0 if input value is empty
            var countToUpdate = 0;
            if ($("#" + $(this).attr("txt-id")).val().trim() !== '') {
                countToUpdate = $("#" + $(this).attr("txt-id")).val();
            }
            if (recordToUpdate != '') {
                clearUpdateMessage();
                // Perform the ajax post
                $.post("/ShoppingCart/UpdateCartCount", { "id": recordToUpdate, "cartCount": countToUpdate },
                function (data) {
                    // Successful requests get here
                    // Update the page elements
                    if (data.ItemCount == 0) {
                        $('#row-' + data.DeleteId).fadeOut('slow');
                    }
                    $('#update-message').text(htmlDecode(data.Message));

                    //Check for not process the callback data when server error occurs
                    if (data.ItemCount != -1) {
                        $('#cart-total').text(data.QtyTotal);//$('#cart-total').text(data.CartTotal);
                        $('#cart-status').text('Cart (' + data.CartCount + ')');
                    }
                });
            }
        });
    });

    function clearUpdateMessage() {
        // Reset update-message area
        $('#update-message').text('');
    }
    function htmlDecode(value) {
        if (value) {
            return $('<div />').html(value).text();
        }
        else {
            return '';
        }
    }
    if (typeof String.prototype.trim !== 'function') {
        String.prototype.trim = function () {
            return this.replace(/^\s+|\s+$/g, '');
        }
    }
</script>

@*@Html.ValidationSummary(true)*@
@using (Html.BeginForm())
{
    <h3>
        <em>Review</em> your cart:
    </h3>

    <p class="button">
        @Html.ActionLink("Checkout >>", "AddressAndPayment", "Checkout") | @Html.ActionLink("Continue >>", "Index", "AvailableVariety")
    </p>
    <div>
        @for (int i = 0; i < Model.CartItems.Count; i++)
        { <p>
            @Html.ValidationMessageFor(model => model.CartItems[i].Count)
        </p>
        }
    </div>
    <div id="update-message" style="padding-bottom: 10px;">
    </div>
    <table class="table">
        <tr>
            <th>
                Variety Name
            </th>
            <!--
            <th>
                Unit Price ($)
            </th>-->
            <th>
                Quantity
            </th>
            <th></th>
        </tr>

        @{int ix = 0;}
        @foreach (var item in Model.CartItems)
        {
            <tr id="row-@item.RecordId">
                <td>
                    @item.Variety.FullDescription
                </td>
                <!--
                <td align="right">
                    0
                </td>-->
                <td align="left" style="padding:0px 5px 0px 5px;">
                    @*id="item-count-@item.RecordId">
                        @item.Count*@
                    @Html.TextBoxFor(model => model.CartItems[ix].Count,
                    new
                    {
                        style = "width:30px; text-align:right;",
                        onkeyup = "clearUpdateMessage();",
                        onchange = "clearUpdateMessage();"
                    })
                </td>
                <td>
                    <a href="#" class="RefreshQuantity" data-id="@item.RecordId" txt-id="CartItems_@(ix)__Count">Update quantity</a>&nbsp;|&nbsp;
                    <a href="#" class="RemoveLink" data-id="@item.RecordId">Remove from cart</a>&nbsp;
                </td>
            </tr>
            ix++;
        }
        <tr>
            <td style="font-weight:bolder">
                Total
            </td>
            <!--
            <td></td>-->
            <td id="cart-total" style="font-weight:bolder">
                @Model.QtyTotal
            </td>
            <td></td>
        </tr>
    </table>
}

