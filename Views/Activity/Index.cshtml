@model PagedList.IPagedList<YHRSys.Models.Activity>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Activities";
}

<h2>Activities</h2>

<p>
    @Html.ActionLink("Create New", "Create")

    @using (Html.BeginForm("Index", "Activity", FormMethod.Post, new { @class = "form-inline", role = "form" }))
    {
        <div class="form-group">
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control input-mini", placeholder = "Search phrase goes here ..." })
        </div>;
        <div class="form-group">
            @Html.TextBox("SearchStartActivityDate", ViewBag.StartActivityDateFilter as string, new { @class = "form-control datecontrol input-mini", placeholder = "Activity date start range .." })
        </div>;
        <div class="form-group">
            @Html.TextBox("SearchEndActivityDate", ViewBag.EndActivityDateFilter as string, new { @class = "form-control datecontrol input-mini", placeholder = "Activity date end range ..." })
        </div>;
        <input class="btn btn-primary" type="submit" id="searchButton" name="btnSubmit" value="Search!" /> 
        <button class="btn btn-success" type="button" onclick="clearForm();">Clear!</button>
        <input class="btn btn-primary" type="submit" id="printButton" name="btnSubmit" value="Export To Excel" />
    }
</p>
<div class="table-responsive">
    <table class="table">
        @if (Model.PageCount > 0) { 
            <tr>
                <th>
                    @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
                </th>
                <th>
                    @Html.ActionLink("Variety", "Index", new { sortOrder = ViewBag.VarietySortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
                </th>
                <th>
                    @Html.ActionLink("Location", "Index", new { sortOrder = ViewBag.LocationSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
                </th>
                <th>
                    @Html.ActionLink("Type", "Index", new { sortOrder = ViewBag.TypeSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
                </th>
                <th>
                    @Html.ActionLink("Quality", "Index", new { sortOrder = ViewBag.QualitySortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
                </th>
                <th>
                    @Html.ActionLink("Quantity", "Index", new { sortOrder = ViewBag.QuantitySortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
                </th>
                <th>
                    @Html.ActionLink("Activity Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
                </th>
                <th>
                    Description
                </th>
                <th>
                    @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatusSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
                </th>
                <th></th>
            </tr>
        }
        else
        {
            <tr>
                <td colspan="9">
                    <em>No records found!</em>
                </td>
            </tr>
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.activityDefinition.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.variety.FullDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.location.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.mediumPrepType.typename)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.quality)%
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.activityDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.status)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.activityId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.activityId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.activityId })
                </td>
            </tr>
        }

    </table>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
                        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter }))

</div>
