@model PagedList.IPagedList<YHRSys.Models.PartnerActivity>
@using PagedList.Mvc;

@{
    if (Model.PageCount > 0)
    {
        Layout = "~/Views/Shared/_Layout_PartnerActivities.cshtml";
    }
}
@{
    ViewBag.Title = "Partner Activities";
}

<h2>Partner Activities</h2>

<p>
    @Html.ActionLink("Create New", "Create")

    @using (Html.BeginForm("Index", "PartnerActivity", FormMethod.Post, new { @class = "form-inline", role = "form" }))
    {
        <div class="form-group">
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control input-mini", placeholder = "Search phrase goes here ..." })
        </div>;
        <div class="form-group">
            @Html.TextBox("SearchStartActivityDate", ViewBag.StartActivityDateFilter as string, new { @class = "form-control datecontrol input-mini", placeholder = "Activity date start range .." })
        </div>;
        <div class="form-group">
            @Html.TextBox("SearchEndActivityDate", ViewBag.EndActivityDateFilter as string, new { @class = "form-control datecontrol input-mini", placeholder = "Activity date end range ..." })
        </div>;
        <input class="btn btn-primary" type="submit" id="searchButton" name="btnSubmit" value="Search!" /> 
        <button class="btn btn-success" type="button" id="resetButton" onclick="clearForm();">Clear!</button>
        <input class="btn btn-success" type="submit" id="printButton" name="btnSubmit" value="Print Report!" />
        @*<button class="btn btn-success" type="button" name="printButton" onclick="location.href='@Url.Action("ExportReport", "PartnerActivity")'">Print Report!</button>*@
    }
</p>
<div class="table-responsive">
    <table class="table">
        @if (Model.PageCount > 0)
        {
        <tr>
            <th>
                @Html.ActionLink("Receiver", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
            </th>

            <th>
                @Html.ActionLink("Giver", "Index", new { sortOrder = ViewBag.GiverSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
            </th>

            <th>
                @Html.ActionLink("Item", "Index", new { sortOrder = ViewBag.ReagentSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
            </th>
            <th>
                @Html.ActionLink("Qty", "Index", new { sortOrder = ViewBag.QuantitySortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter }, new { title = "Reagent Quantity" })
            </th>
            <th>
                @Html.ActionLink("OiC", "Index", new { sortOrder = ViewBag.OiCNameSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter }, new { title = "Officer-in-Charge" })
            </th>
            <th>
                @Html.ActionLink("Acty Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter }, new { title = "Activity Date" })
            </th>
            <th>
                BackStopping
            </th>
            <th>
                <span title="TC Plantlets Given">TCPG</span>
            </th>
            <th>
                <span title="Bioreactor Plants Given">BioRPG</span>
            </th>
            <th>
                <span title="Tubers Given">TG</span>
            </th>
            <th>
                <span title="Seeds Given">SG</span>
            </th>
            <th>
                <span title="TC Plantlets Available">TCPA</span>
            </th>
            <th>
                <span title="TI Plantlets Available">TIPA</span>
            </th>
            <th>
                <span title="Tubers Available">TA</span>
            </th>
            <th>
                <span title="Seeds Available">SA</span>
            </th>
            <th></th>
        </tr>
        }
        else
        {
        <tr>
            <td colspan="8">
                <em>No records found!</em>
            </td>
        </tr>
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.partner.name)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.giver.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.reagent.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.reagentQty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.oic.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.activityDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.backStopping)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.tcPlantletsGiven)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.bioreactorplantsGiven)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.tubersGiven)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.seedsGiven)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.tcPlantletsAvailable)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.tibPlantletsAvailable)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.tubersAvailable)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.seedsAvailable)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.partnerActivityId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.partnerActivityId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.partnerActivityId })
                </td>
            </tr>
        }

    </table>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
                        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter }))
    <div class="responsive">
        <img src="@Url.Action("PartnerActivitiesChart", "PartnerActivity", new { pid = @Model.PageNumber })" />@*pid is a variable that would suit the argument in the method PartnerActivitiesChart*@
    </div>
</div>