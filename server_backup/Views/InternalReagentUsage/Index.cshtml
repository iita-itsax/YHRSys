@model PagedList.IPagedList<YHRSys.Models.InternalReagentUsage>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Internal Reagent Usages";
}

<h2>Internal Reagent Usages</h2>

<p>
    @Html.ActionLink("Create New", "Create")

    @using (Html.BeginForm("Index", "InternalReagentUsage", FormMethod.Post, new { @class = "form-inline", role = "form" }))
    {
        <div class="form-group">
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control input-mini", placeholder = "Search phrase goes here ..." })
        </div>;
        <div class="form-group">
            @Html.TextBox("SearchStartDispatchDate", ViewBag.StartDispatchDateFilter as string, new { @class = "form-control datecontrol input-mini", placeholder = "Dispatch date start range .." })
        </div>;
        <div class="form-group">
            @Html.TextBox("SearchEndDispatchDate", ViewBag.EndDispatchDateFilter as string, new { @class = "form-control datecontrol input-mini", placeholder = "Dispatch date end range ..." })
        </div>;
        <button class="btn btn-primary" type="submit">Search!</button> <button class="btn btn-success" type="button" onclick="clearForm();">Clear!</button>
    }
</p>
<div class="table-responsive">
    <table class="table">
        @if (Model.PageCount > 0)
        {
        <tr>
            <th>
                @Html.ActionLink("Item", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
            </th>
            <th>
                @Html.ActionLink("Quanity", "Index", new { sortOrder = ViewBag.QuantitySortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
            </th>
            <th>
                @Html.ActionLink("Dispatch Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
            </th>
            <th>
                @Html.ActionLink("DispatchedBy", "Index", new { sortOrder = ViewBag.OiCNameSortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
            </th>
            <th>
                @Html.ActionLink("ReceivedBy", "Index", new { sortOrder = ViewBag.ReceivedBySortParm, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter })
            </th>
            <th>
                Stock Note
            </th>
            <th>
                CreatedBy
            </th>
            <th>
                CreatedOn
            </th>
            <th></th>
        </tr>
        }
        else
        {
        <tr>
            <td colspan="9">
                <em>No records found!</em>
            </td>
        </tr>
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.reagent.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.dispatchDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.user.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.receivedBy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.note)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.extendCreatedBy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.createdDate)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.usageId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.usageId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.usageId })
                </td>
            </tr>
        }

    </table>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
                        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, currentStartDateFilter = ViewBag.CurrentStartDateFilter, currentEndDateFilter = ViewBag.CurrentEndDateFilter }))

</div>